// Generated by CoffeeScript 1.10.0
(function() {
  var DEPENDENCIES_JSON_URL, Version, request;

  request = require('request');

  DEPENDENCIES_JSON_URL = 'https://raw.githubusercontent.com/EloBuddy/EloBuddy.Dependencies/master/dependencies.json';

  Version = (function() {
    Version.updatedVersions = [];

    function Version() {
      setInterval(this.refresh, 60000);
      this.refresh();
    }

    Version.prototype.refresh = function() {
      console.info('Refreshing dependencies...');
      return request(DEPENDENCIES_JSON_URL, function(error, response, body) {
        var patches;
        if (!error && response.statusCode === 200) {
          patches = JSON.parse(body)['Patches'];
          return Object.keys(patches).forEach(function(leagueHash) {
            if (!~Version.updatedVersions.indexOf(leagueHash)) {
              Version.updatedVersions.push(leagueHash);
              return console.info("Added '" + leagueHash + "' to updated hash list");
            }
          });
        }
      });
    };

    Version.prototype.isUpdated = function(md5Hash) {
      if (md5Hash.length !== 32) {
        return false;
      }
      return Version.updatedVersions.indexOf(md5Hash) !== -1;
    };

    Version.prototype.handle = function(request, response) {
      var leagueHash;
      leagueHash = request.params[0];
      if (leagueHash.length !== 32) {
        return response.json({
          status: 'success',
          updatedVersions: Version.updatedVersions
        });
      }
      return response.json({
        status: 'success',
        leagueHash: leagueHash,
        updated: this.isUpdated(leagueHash)
      });
    };

    return Version;

  })();

  module.exports = Version;

}).call(this);
