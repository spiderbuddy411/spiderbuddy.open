<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_core_front_system extends \\IPS\\Theme\\Template\n{\n\t\t\tfunction announcement( $announcement ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsType_pageHeader' >\n\t<h1 class='ipsType_pageTitle ipsType_largeTitle'>\nCONTENT;\n$return .= htmlspecialchars( $announcement->mapped( 'title' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h1>\n\t\nCONTENT;\n\nif ( !$announcement->active ):\n$return .= <<<CONTENT\n\n\t\t<p class='ipsType_reset ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announcement_not_active', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n<div class='ipsPhotoPanel ipsPhotoPanel_tiny ipsClearfix'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $announcement->author(), 'tiny' );\n$return .= <<<CONTENT\n\n\t<div>\n\t\t<p class='ipsType_reset ipsType_large ipsType_blendLinks'>\n\t\t\t\nCONTENT;\n\n$htmlsprintf = array($announcement->author()->link()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n\n            \nCONTENT;\n\nif ( $announcement->start ):\n$return .= <<<CONTENT\n\n                <br>\n                <span class='ipsType_light ipsType_medium'>\nCONTENT;\n\n$val = ( $announcement->start instanceof \\IPS\\DateTime ) ? $announcement->start : \\IPS\\DateTime::ts( $announcement->start );$return .= (string) $val->localeDate();\n$return .= <<<CONTENT\n<\/span>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t<\/div>\n<\/div>\n<br>\n\n<article class='ipsBox ipsPad' style=\"display:none\" >\n\t<section class='ipsType_richText ipsType_normal'>\n\t\t{$announcement->mapped( 'content' )}\n\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('can_manage_announcements') and ( $announcement->canEdit() or $announcement->canDelete() ) ):\n$return .= <<<CONTENT\n\n\t\t\t<hr class='ipsHr'>\n\t\t\t<a href='#elAnnouncementActions_menu' id='elAnnouncementActions' class='ipsButton ipsButton_light ipsButton_verySmall' data-ipsMenu>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announce_actions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t<ul id='elAnnouncementActions_menu' class='ipsMenu ipsMenu_auto ipsHide'>\n\t\t\t\t\nCONTENT;\n\nif ( $announcement->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $announcement->url( 'create' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-modal='true' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit_announcement', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-action='ipsMenu_ping'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $announcement->canDelete() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $announcement->url( 'delete' )->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm  title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $announcement->url( 'status' )->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\nif ( $announcement->active ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announce_mark_inactive', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announce_mark_active', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\nif ( $announcement->active ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announce_mark_inactive', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announce_mark_active', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t<\/ul>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/section>\n<\/article>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction completeProfile( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<section class='ipsPad'>\n\t<br>\n\t<h1 class='ipsType_veryLarge ipsType_center ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'need_more_info', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<p class='ipsType_large ipsType_center ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'need_more_info_text', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t<br>\n\t<div class='ipsBox ipsPad'>\n\t\t{$form}\n\t<\/div>\n<\/section>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction contact( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('contact') );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n<div class='ipsPad'>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsType_normal ipsType_richText'>\n\t{$form}\n<\/div>\n\nCONTENT;\n\nif ( \\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction contactDone(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<br><br>\n<p class='ipsType_reset ipsType_center ipsType_huge'>\n\t<i class='fa fa-envelope'><\/i>\n<\/p>\n\n<h1 class='ipsType_veryLarge ipsType_center'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'contact_sent', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\n<div class='ipsType_large ipsType_center ipsType_richText'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'contact_sent_blurb', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\n<br>\n<p class='ipsType_center'>\n\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"\/\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_normal ipsButton_small'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'go_community_home', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/p>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction coppa( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<section class='ipsPad'>\n\t<br>\n\t<h1 class='ipsType_veryLarge ipsType_center ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_up', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<p class='ipsType_large ipsType_center ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'existing_user', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login\", null, \"login\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_short', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/p>\n\t<br>\n\n\t<div data-role='registerForm' class='ipsBox ipsPad'>\n\t\t<section class='ipsType_center'>\n\t\t\t<p class='ipsType_large ipsType_reset'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_verify', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/p>\n\t\t\t<p class='ipsType_normal ipsType_light ipsType_reset'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_verification_only', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type != \"none\" ):\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type == \"internal\" ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=privacy\", null, \"privacy\", array(), 0 ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->privacy_link;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'privacy', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>.\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<br><br>\n\n\t\t\t{$form->customTemplate( array( \\IPS\\Theme::i()->getTemplate( 'system', 'core', 'front' ), 'coppaForm' ) )}\n\t\t<\/section>\n\t<\/div>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction coppaConsent(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPrint\">\n\t<h1>\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->board_name;\n$return .= <<<CONTENT\n<\/h1>\n\t<h2>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\n\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Settings::i()->board_name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_intro', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\n\t<table>\n\t\t<tr>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_child_name', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_child_email', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t<\/tr>\n\t<\/table>\n\t\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_disclaimer', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\n\t<div><\/div>\n\t<div><\/div>\n\n\t<table>\n\t\t<tr>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_name', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_relation', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_email', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_phone', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<th colspan=\"2\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_sig', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td colspan=\"2\" class=\"ipsPrint_tripleHeight\">&nbsp;<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<th colspan=\"2\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_date', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td colspan=\"2\" class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t<\/tr>\n\t<\/table>\n\n\t<div><\/div>\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type != \"none\" ):\n$return .= <<<CONTENT\n\n\t\t<p>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_privacy', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type == \"internal\" ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=privacy\", null, \"privacy\", array(), 0 ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->privacy_link;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/p>\n\t\t<div><\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->coppa_address ):\n$return .= <<<CONTENT\n\n\t\t<p>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_mail', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$return .= \\IPS\\GeoLocation::parseForOutput( \\IPS\\Settings::i()->coppa_address );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->coppa_fax ):\n$return .= <<<CONTENT\n\n\t\t<p>\nCONTENT;\n\nif ( \\IPS\\Settings::i()->coppa_address and \\IPS\\Settings::i()->coppa_fax ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_fax', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$return .= \\IPS\\Settings::i()->coppa_fax;\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction coppaForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<form accept-charset='utf-8' method=\"post\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" id='elCoppaForm' class='ipsType_center' data-ipsForm>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\Date ):\n$return .= <<<CONTENT\n\n\t\t\t\t<input type=\"date\" class='ipsField_short ipsField_primary' required placeholder=\"\nCONTENT;\n\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name='\nCONTENT;\n$return .= htmlspecialchars( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='\nCONTENT;\n$return .= htmlspecialchars( $input->htmlId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t&nbsp;&nbsp;<button type='submit' class='ipsButton ipsButton_large ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'continue', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar, $form=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form \nCONTENT;\n\nif ( \\IPS\\Request::i()->isAjax()  ):\n$return .= <<<CONTENT\ndata-controller='core.front.core.followForm'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n accept-charset='utf-8' class=\"ipsForm \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n data-ipsForm >\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $uploadField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t<input type=\"hidden\" name=\"plupload\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( md5( uniqid() ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class=\"ipsPad\">\n\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Output::i()->title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<br><br>\n\t\t<ul class='ipsList_reset'>\n\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( is_string( $input ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input}\n\t\t\t\t\t\t<hr class='ipsHr'>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $input instanceof \\IPS\\Helpers\\Form\\Radio ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class=\"ipsFieldRow\">\n\t\t\t\t\t\t\t<strong class='ipsType_normal'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_send_me', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t{$input->html($form)}\n\t\t\t\t\t\t\t<hr class='ipsHr'>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input->html($form)}\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input->rowHtml($form)}\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n\t<div class=\"ipsAreaBackground ipsPad\">\n\t\t{$actionButtons[0]} \nCONTENT;\n\nif ( isset( $actionButtons[1] ) ):\n$return .= <<<CONTENT\n{$actionButtons[1]}\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followedContent( $types, $currentAppModule, $currentType, $table ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('menu_followed_content') );\n$return .= <<<CONTENT\n\n<div>\n\t<div data-role=\"profileContent\">\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsColumns ipsColumns_collapsePhone\">\n\t\t\t<div class=\"ipsColumn ipsColumn_medium\">\n\t\t\t\t<div class=\"ipsSideMenu\" id=\"modcp_menu\" data-ipsTabBar data-ipsTabBar-contentArea='#elFollowedContent' data-ipsTabBar-itemselector=\".ipsSideMenu_item\" data-ipsTabBar-activeClass=\"ipsSideMenu_itemActive\" data-ipsSideMenu>\n\t\t\t\t\t<h3 class=\"ipsSideMenu_mainTitle ipsAreaBackground_light ipsType_medium\">\n\t\t\t\t\t\t<a href=\"#user_content\" class=\"ipsPad_double\" data-action=\"openSideMenu\"><i class=\"fa fa-bars\"><\/i> &nbsp;\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_content_type', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;<i class=\"fa fa-caret-down\"><\/i><\/a>\n\t\t\t\t\t<\/h3>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $types as $app => $_types ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $app != \"core\" ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<h4 class='ipsSideMenu_subTitle'>\nCONTENT;\n\n$val = \"module__{$app}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t\t\t\t\t\t<ul class=\"ipsSideMenu_list\">\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $_types as $key => $class ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'type' => $key, 'change_section' => 1, 'page' => NULL ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsSideMenu_item \nCONTENT;\n\nif ( $currentType == $key ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\nCONTENT;\n\nif ( is_subclass_of( $class, 'IPS\\Content\\Item' ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"{$class::$title}_pl\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"{$class::$nodeTitle}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a><\/li>\t\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<h4 class='ipsSideMenu_subTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'other', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t\t\t\t<ul class='ipsSideMenu_list'>\n\t\t\t\t\t\t\t<li><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'type' => 'core_member', 'change_section' => 1, 'page' => NULL ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsSideMenu_item \nCONTENT;\n\nif ( $currentType == 'core_member' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/div>\t\t\t\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<div class=\"ipsColumn ipsColumn_fluid\" id='elFollowedContent'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \"core\" )->followedContentSection( $types, $currentAppModule, $currentType, (string) $table );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followedContentMemberRow( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$loadedMember = \\IPS\\Member::load( $row->member_id );\n$return .= <<<CONTENT\n\n\t<li class='ipsDataItem' data-controller='core.front.system.manageFollowed' data-followID='\nCONTENT;\n$return .= htmlspecialchars( $row->_followData['follow_area'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-\nCONTENT;\n$return .= htmlspecialchars( $row->_followData['follow_rel_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t<div class='ipsDataItem_icon'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $loadedMember, 'small' );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\t<div class='ipsDataItem_main'>\n\t\t\t<h3 class='ipsType_reset ipsType_large ipsType_unbold'>{$loadedMember->link()}<\/h3> \nCONTENT;\n\nif ( $loadedMember->isOnline() ):\n$return .= <<<CONTENT\n<i class=\"fa fa-circle ipsOnlineStatus_online\" data-ipsTooltip title='\nCONTENT;\n\n$sprintf = array($row->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'online_now', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'><\/i>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<span class='ipsType_normal'>\nCONTENT;\n\n$return .= \\IPS\\Member\\Group::load( $row->member_group_id )->formattedName;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<ul class='ipsList_inline ipsType_light'>\n\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_member_posts', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n$return .= htmlspecialchars( $loadedMember->member_posts, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_joined', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n\n$val = ( $loadedMember->joined instanceof \\IPS\\DateTime ) ? $loadedMember->joined : \\IPS\\DateTime::ts( $loadedMember->joined );$return .= $val->html();\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\nCONTENT;\n\nif ( $loadedMember->last_activity ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_last_visit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n\n$val = ( $loadedMember->last_activity instanceof \\IPS\\DateTime ) ? $loadedMember->last_activity : \\IPS\\DateTime::ts( $loadedMember->last_activity );$return .= $val->html();\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<div class='ipsDataItem_generic ipsDataItem_size1 ipsType_center ipsType_large'>\n\t\t\t<span class='ipsBadge ipsBadge_icon ipsBadge_new \nCONTENT;\n\nif ( !$row->_followData['follow_is_anon'] ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-role='followAnonymous' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_is_anon', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span>\n\t\t<\/div>\n\n\t\t<div class='ipsDataItem_generic ipsDataItem_size6'>\n\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t<li title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_when', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-role='followDate'><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $row->_followData['follow_added'] instanceof \\IPS\\DateTime ) ? $row->_followData['follow_added'] : \\IPS\\DateTime::ts( $row->_followData['follow_added'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t<li title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_how', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-role='followFrequency'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->_followData['follow_notify_freq'] == 'none' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class='fa fa-bell-slash-o'><\/i>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class='fa fa-bell'><\/i>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\n$val = \"follow_freq_{$row->_followData['follow_notify_freq']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\n\t\t<div class='ipsDataItem_generic ipsDataItem_size6 ipsType_center'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \"core\" )->manageFollow( $row->_followData['follow_app'], $row->_followData['follow_area'], $row->_followData['follow_rel_id'] );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\n\t\t\nCONTENT;\n\nif ( $table->canModerate() ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsDataItem_modCheck'>\n\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t<input type='checkbox' data-role='moderation' name=\"moderate[\nCONTENT;\n$return .= htmlspecialchars( $row->member_id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" data-actions=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ' ', $table->multimodActions( $row ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-state=''>\n\t\t\t\t\t<span><\/span>\n\t\t\t\t<\/span>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followedContentSection( $types, $currentAppModule, $currentType, $table ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsBox cFollowedContent'>\n\t<h2 class='ipsType_sectionTitle ipsType_reset'>\nCONTENT;\n\nif ( is_subclass_of( $types[ $currentAppModule ][ $currentType ], 'IPS\\Content\\Item' ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $types[ $currentAppModule ][ $currentType ]::$title . '_pl' )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stuff_i_follow', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelseif ( $types[ $currentAppModule ][ $currentType ] == \"\\IPS\\Member\" ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_i_follow', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $types[ $currentAppModule ][ $currentType ]::$nodeTitle )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stuff_i_follow', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/h2>\n\t{$table}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followers( $url, $pagination, $followers, $anonymous ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-ipsInfScroll data-ipsInfScroll-scrollScope=\"#elFollowerList\" data-ipsInfScroll-container=\"#elFollowerList\" data-ipsInfScroll-url=\"\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsInfScroll-pageParam=\"followerPage\" data-ipsInfScroll-pageBreakTpl=\"\">\n\t<div class=\"ipsJS_hide\">{$pagination}<\/div>\n\t<div class='ipsFollowerList ipsPad ipsScrollbar'>\n\t\t<ul class=\"ipsDataList ipsList_reset\" id=\"elFollowerList\">\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->followersRows( $followers );\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\t\nCONTENT;\n\nif ( $anonymous ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( count( $followers ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsPad_half ipsType_center ipsType_light\">\nCONTENT;\n\n$pluralize = array( $anonymous ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'and_x_others', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsPad_half ipsType_center ipsType_light\">\nCONTENT;\n\n$pluralize = array( $anonymous ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'x_anonymous_members', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followersRows( $followers ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nforeach ( $followers as $follower ):\n$return .= <<<CONTENT\n\n\t<li class='ipsDataItem ipsClearfix'>\n\t\t<div class='ipsDataItem_icon ipsPos_top'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::load( $follower['follow_member_id'] ), 'tiny' );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\t<div class='ipsDataItem_main'>\n\t\t\t<strong class='ipsDataItem_title'>\nCONTENT;\n\n$link = \\IPS\\Member::load( $follower['follow_member_id'] )->link();\n$return .= <<<CONTENT\n{$link}<\/strong><br>\n\t\t\t<span class='ipsType_light'>\nCONTENT;\n\n$val = ( $follower['follow_added'] instanceof \\IPS\\DateTime ) ? $follower['follow_added'] : \\IPS\\DateTime::ts( $follower['follow_added'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/div>\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction guidelines( $guidelines ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('guidelines') );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsType_normal ipsType_richText ipsPad ipsBox'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'guidelines_value', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ignore( $form, $table ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('ignored_users'), \\IPS\\Member::loggedIn()->language()->addToStack('ignored_users_blurb') );\n$return .= <<<CONTENT\n\n<div data-controller='core.front.ignore.new'>\n\t<div class='ipsAreaBackground ipsPad'>\n\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ignored_users_add', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ignored_users_add_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t<br>\n\t\t{$form}\n\t<\/div>\n\t<br>\n\t{$table}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ignoreEditForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<form accept-charset='utf-8' id=\"elIgnoreForm\" class=\"ipsForm \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n data-ipsForm data-controller='core.front.ignore.edit'>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<ul class=\"ipsForm ipsForm_vertical ipsPad\">\n\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t<li class='ipsFieldRow ipsFieldRow_fullWidth'>\n\t\t\t\t<ul class='ipsFieldRow_content ipsList_reset'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsFieldRow_inlineCheckbox'>\n\t\t\t\t\t\t\t\t{$input->html()}\n\t\t\t\t\t\t\t\t<label for='check_\nCONTENT;\n$return .= htmlspecialchars( $input->htmlId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n\t<div class='ipsAreaBackground ipsPad ipsType_right'>\n\t\t\nCONTENT;\n\nforeach ( $actionButtons as $button ):\n$return .= <<<CONTENT\n\n\t\t\t{$button}\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ignoreForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form accept-charset='utf-8' id=\"elIgnoreForm\" class=\"ipsForm \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n data-ipsForm>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<ul class=\"ipsForm ipsForm_vertical\">\n\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( !( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsFieldRow ipsFieldRow_noLabel ipsFieldRow_fullWidth'>\n\t\t\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\t\t{$input->html()}\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $input->error ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t<span class=\"ipsType_warning\">\nCONTENT;\n\n$val = \"{$input->error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<li class='ipsFieldRow ipsFieldRow_fullWidth' id='elIgnoreTypes'>\n\t\t\t\t<strong class='ipsFieldRow_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ignored_users_ignore', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<ul class='ipsFieldRow_content ipsList_reset'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsFieldRow_inlineCheckbox'>\n\t\t\t\t\t\t\t\t{$input->html()}\n\t\t\t\t\t\t\t\t<label for='check_\nCONTENT;\n$return .= htmlspecialchars( $input->htmlId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<li class='ipsFieldRow' id='elIgnoreSubmitRow'>\n\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $actionButtons as $button ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$button}\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/li>\n\t<\/ul>\n\t<div id='elIgnoreLoading'><\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ignoreTable( $table, $headers, $rows, $quickSearch ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsBox' data-baseurl='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-resort='\nCONTENT;\n$return .= htmlspecialchars( $table->resortKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-controller='core.global.core.table' id='elTable_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\nCONTENT;\n\nif ( $table->title ):\n$return .= <<<CONTENT\n\n\t\t<h2 class='ipsType_sectionTitle ipsType_reset ipsClear'>\nCONTENT;\n\n$val = \"{$table->title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\t<ul class=\"ipsButtonRow ipsPos_right ipsClearfix\">\n\t\t\t\nCONTENT;\n\nif ( !empty( $table->filters ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#elFilterByMenu_menu\" data-role=\"tableFilterMenu\" id=\"elFilterByMenu_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsMenu data-ipsMenu-activeClass=\"ipsButtonRow_active\" data-ipsMenu-selectable=\"radio\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'filter_by', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class=\"fa fa-caret-down\"><\/i><\/a>\n\t\t\t\t\t<ul class='ipsMenu ipsMenu_auto ipsMenu_withStem ipsMenu_selectable ipsHide' id='elFilterByMenu_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t\t\t\t\t<li data-ipsMenuValue='' class='ipsMenu_item \nCONTENT;\n\nif ( !$table->filter ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'sortby' => $table->sortBy, 'sortdirection' => $table->sortDirection, 'page' => '1', 'filter' => '', 'group' => \\IPS\\Request::i()->group ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='\nCONTENT;\n\nif ( !array_key_exists( $table->filter, $table->filters ) ):\n$return .= <<<CONTENT\nipsButtonRow_active\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'all', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $table->filters as $k => $q ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li data-ipsMenuValue='\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsMenu_item \nCONTENT;\n\nif ( $k === $table->filter ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'filter' => $k, 'sortby' => $table->sortBy, 'sortdirection' => $table->sortDirection, 'page' => '1', 'group' => \\IPS\\Request::i()->group ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='cIgnoreType_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$table->langPrefix}{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\t\nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\n\t<ol class='ipsDataList ipsGrid ipsGrid_collapsePhone ipsClear' id='elIgnoreUsers' data-role='tableRows'>\n\t\t\nCONTENT;\n\n$return .= $table->rowsTemplate[0]->{$table->rowsTemplate[1]}( $table, $headers, $rows );\n$return .= <<<CONTENT\n\n\t<\/ol>\n\n\t\nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ignoreTableRows( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( empty($rows) ):\n$return .= <<<CONTENT\n\n\t<li class='ipsDataItem'>\n\t\t<div class='ipsPad ipsType_light ipsType_center'><br><br>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_results', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t<\/li>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $rows as $r ):\n$return .= <<<CONTENT\n\n\t\t<li class='ipsDataItem ipsGrid_span6 ipsFaded_withHover' id='elIgnoreRow\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role=\"ignoreRow\" data-ignoreUserID='\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-controller='core.front.ignore.existing'>\n\t\t\t<p class='ipsType_reset ipsDataItem_icon'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::load( $r['ignore_ignore_id'] ), 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t<h4 class='ipsDataItem_title'><strong data-role=\"ignoreRowName\">\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::load( $r['ignore_ignore_id'] )->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong><\/h4>\n\t\t\t\t<ul class='ipsList_inline'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( \\IPS\\core\\Ignore::types() as $t ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $r[\"ignore_{$t}\"] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsType_light'><i class='fa fa-check'><\/i> \nCONTENT;\n\n$val = \"ignore_$t\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsFaded'>\n\t\t\t\t\t\t<a href='#elUserIgnore\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' id='elUserIgnore\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_large ipsPos_middle ipsType_blendLinks' data-ipsMenu data-ipsMenu-appendTo='#elIgnoreRow\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='ignoreMenu'>\n\t\t\t\t\t\t\t<i class='fa fa-cog'><\/i> <i class='fa fa-caret-down'><\/i>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\n\t\t\t\t<ul class='ipsMenu ipsJS_hide' id='elUserIgnore\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t\t\t\t<li class='ipsMenu_item' data-ipsMenuValue='edit'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=ignore&do=edit&id={$r['ignore_ignore_id']}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-remoteSubmit data-ipsDialog-size='narrow' data-ipsDialog-title='\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $r['ignore_ignore_id'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit_ignore_for', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_ignored_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class='ipsMenu_item' data-ipsMenuValue='remove'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=ignore&do=remove&id={$r['ignore_ignore_id']}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stop_ignoring_user', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction login( $forms, $error ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t<div class=''>\n\t\t<br>\n\t\t<h1 class='ipsType_reset ipsType_veryLarge ipsType_center'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_short', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_reg ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_large ipsType_center ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'dont_have_an_account', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register\", null, \"register\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_up', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>.<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<br>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t<div class='ipsColumns ipsColumns_collapsePhone'>\n\t\t<div class='ipsColumn ipsColumn_fluid ipsBox'>\n\t\t\t<div class='ipsPad'>\n\t\t\t\t\nCONTENT;\n\nif ( $error !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app, 'global' )->message( $error, 'error' );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<br>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $forms as $k => $form ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $k === '_standard' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$form}\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( count ( $forms ) > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsColumn ipsColumn_veryWide ipsBox'>\n\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_faster', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t\nCONTENT;\n\nif ( count ( $forms ) > 2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_normal ipsType_reset ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_connect', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<br>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $forms as $k => $form ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $k !== '_standard' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<div class='ipsPad_half'>{$form}<\/div>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction loginForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar, $form=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form accept-charset='utf-8' class=\"ipsPad ipsForm ipsForm_vertical\" method='post' action='\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsValidation novalidate>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<h4 class=\"ipsType_sectionHead\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'login', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t<br><br>\n\t<ul class='ipsList_reset'>\n\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\Text ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class=\"ipsFieldRow ipsFieldRow_noLabel ipsFieldRow_fullWidth\">\n\t\t\t\t\t\t<input type=\"\nCONTENT;\n$return .= htmlspecialchars( $input->formType, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" required placeholder=\"\nCONTENT;\n\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name='\nCONTENT;\n$return .= htmlspecialchars( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='\nCONTENT;\n$return .= htmlspecialchars( $input->htmlId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$input->rowHtml($form)}\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<li class=\"ipsFieldRow ipsFieldRow_fullWidth\">\n\t\t\t<br>\n\t\t\t<input type=\"submit\" class=\"ipsButton ipsButton_primary ipsButton_small\" value=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'login', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" id=\"elSignIn_submit\">\n\t\t\t<br>\n\t\t\t<p class=\"ipsType_right ipsType_small\">\n\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=lostpass\", null, \"lostpassword\", array(), 0 ) );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'forgotten_password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'forgotten_password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/p>\n\t\t<\/li>\n\t<\/ul>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction lostPass( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('lost_password') );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<style>.cWidgetContainer {display:none;}\n  #ipsLayout_mainArea{\n  \tmin-height: 0px;\n  }\n  .eb_logo{\n  \tmargin-top: -300px;\n  }\n  #secondaryFooter{\n  \tdisplay: none;\n  }\n<\/style>\n<div class='ipsBox ipsPad' style=\"margin-top: -40px;\">\n  <h2 class=\"ipsType_sectionTitle ipsType_reset ipsType_medium\" style=\"margin-left: -15px;margin-right: -15px;margin-top: -15px;\">\n    Reset Password Form\n  <\/h2>\n\t<p class='ipsType_normal'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'lost_pass_instructions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n\t<br>\n\t<br>\n\t{$form}\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction lostPassConfirm(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('lost_password') );\n$return .= <<<CONTENT\n\n<div class='ipsLayout_contentSection'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'lost_pass_confirm', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction manageFollow( $app, $area, $id ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div data-followApp='\nCONTENT;\n$return .= htmlspecialchars( $app, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-followArea='\nCONTENT;\n$return .= htmlspecialchars( $area, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-followID='\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-buttonType='manage' data-controller='core.front.core.followButton'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \"core\" )->manageFollowButton( $app, $area, $id );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction manageFollowButton( $app, $area, $id ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->member_id ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->following( $app, $area, $id ) ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsFollow\" data-role=\"followButton\">\n\t\t\t<a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&section=notifications&do=follow&follow_app={$app}&follow_area={$area}&follow_id={$id}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'following_this_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class='ipsButton ipsButton_light ipsButton_fullWidth ipsButton_verySmall' data-ipsHover data-ipsHover-cache='false' data-ipsHover-onClick>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_change_preference', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction mergeSocialAccount( $handler, $existingAccount, $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<h1 class='ipsType_veryLarge ipsType_center'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'link_your_accounts', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n<p class='ipsType_large ipsType_center ipsType_light'>\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( 'login_handler_' . ucfirst( $handler ) )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'link_your_accounts_blurb', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n<hr class='ipsHr'>\n{$form}\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction myAttachments( $files, $used ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<h1 class=\"ipsType_pageTitle\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'my_attachments', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->group['g_attach_max'] > 0 ):\n$return .= <<<CONTENT\n\n\t<div class='ipsAreaBackground_light ipsPad'>\n\t\t<p>\nCONTENT;\n\n$sprintf = array(\\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( $used ), \\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( \\IPS\\Member::loggedIn()->group['g_attach_max'] * 1024 )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'my_attachments_blurb', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( empty($files) ):\n$return .= <<<CONTENT\n\n\t<div class='ipsPad ipsAreaBackground_light'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'my_attachments_empty', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class=\"ipsGrid ipsAttachment_fileList\">\n\t\t\nCONTENT;\n\nforeach ( $files as $url => $file ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$id = mb_substr( $url, mb_strrpos( $url, '=' ) + 1 );\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsDataItem ipsAttach ipsAttach_done'>\n\t\t\t\t<div class='ipsDataItem_generic ipsDataItem_size1 ipsResponsive_hidePhone ipsResponsive_block ipsType_center'>\n\t\t\t\t\t\nCONTENT;\n\nif ( in_array( mb_strtolower( mb_substr( $file->filename, mb_strrpos( $file->filename, '.' ) + 1 ) ), \\IPS\\Image::$imageExtensions ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $file, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><img src=\"\nCONTENT;\n$return .= htmlspecialchars( $file, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" alt='' class='ipsImage' data-ipsLightbox data-ipsLightbox-group=\"myAttachments\"><\/a>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class='fa fa-file ipsType_large'><\/i>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t<div class='ipsDataItem_main' data-action='selectFile'>\n\t\t\t\t\t<h2 class='ipsDataItem_title ipsType_reset ipsType_medium ipsAttach_title ipsTruncate ipsTruncate_line'>\nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t<p class='ipsDataItem_meta ipsType_light'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( $file->filesize() );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t<\/div>\n\t\t\t\t<div class='ipsDataItem_generic ipsDataItem_size6 ipsType_right'>\n\t\t\t\t\t<ul class='ipsButton_split'>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=attachments&do=view&id={$id}\", null, \"attachments\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_light' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'my_attachments_view', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-search'><\/i><\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->group['gbw_delete_attachments'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=attachments&do=delete&id={$id}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"attachments\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_light' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-action=\"deleteAttachment\" ><i class='fa fa-trash-o'><\/i><\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\t\t\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notAdminValidated(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<section class='ipsType_center ipsPad ipsBox'>\n\t<br>\n\t<i class='ipsType_huge fa fa-lock'><\/i>\n\t<h1 class='ipsType_veryLarge'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_admin_validation', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\n\t<p class='ipsType_large'>\n\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->email); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_admin_validation_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n\t\nCONTENT;\n\n$guest = new \\IPS\\Member;\n$return .= <<<CONTENT\n\n\t<p class='ipsType_normal'>\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login&do=logout\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"logout\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary'>\nCONTENT;\n\nif ( $guest->group['g_view_board'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_continue_as_guest', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_out', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a>\n\t<\/p>\n\t<hr class='ipsHr'>\n\t<p class='ipsType_normal'>\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=changeEmail\", null, \"register\", array(), 0 ) );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-modal='true' class='ipsButton ipsButton_light ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_change_email', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=cancel\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"register\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_light ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_cancel', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/p>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notCoppaValidated(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<section class='ipsType_center ipsPad ipsBox'>\n\t<h1 class='ipsType_veryLarge ipsType_center'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_consent_required', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<br>\n\n\t<div data-role='registerForm'>\n\t\t<p class='ipsType_large'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_consent_required_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\t<br><br>\n\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=coppaForm\", null, \"register\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary ipsButton_large'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_print_form', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/div>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notValidated( $validating=array() ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<section class='ipsType_center ipsPad'>\n\t<br><br>\n\t<i class='ipsType_huge fa fa-envelope'><\/i>\n\t<h1 class='ipsType_veryLarge'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_confirm_email', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\n\t<p class='ipsType_large'>\n\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->email); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_confirm_email_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n\t<p class='ipsType_large'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_confirm_email_must', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n\t<hr class='ipsHr'>\n\t<p class='ipsType_normal'>\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=resend\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"register\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_light ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_resend_email', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=changeEmail\", null, \"register\", array(), 0 ) );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-size='narrow' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_change_email', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-modal='true' class='ipsButton ipsButton_light ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_change_email', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login&do=logout\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"logout\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_light ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_out', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\nCONTENT;\n\nif ( $validating['new_reg'] ):\n$return .= <<<CONTENT\n\n\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=cancel\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"register\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_light ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_cancel', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/p>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notifications( $table ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsPageHeader ipsClearfix ipsSpacer_bottom'>\n\t<h1 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notifications', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<div class=\"ipsPos_right\">\n\t\t<a class=\"ipsButton ipsButton_link\" href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&do=options\", null, \"notifications_options\", array(), 0 ) );\n$return .= <<<CONTENT\n\"><i class=\"fa fa-cog\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notification_options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<a class=\"ipsButton ipsButton_link\" href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&format=rss\", null, \"notifications_rss\", array(), 0 ) );\n$return .= <<<CONTENT\n\"><i class=\"fa fa-rss\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rss', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/div>\n<\/div>\n<div class='ipsBox'>\n\t{$table}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationsAjax( $notifications ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( empty( $notifications ) ):\n$return .= <<<CONTENT\n\n\t<li class='ipsDataItem ipsDataItem_unread'>\n\t\t<div class='ipsPad ipsType_light ipsType_center ipsType_normal'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_results_notifications', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t<\/li>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $notifications as $notification ):\n$return .= <<<CONTENT\n\n\t\t<li class='ipsDataItem \nCONTENT;\n\nif ( !$notification['notification']->read_time ):\n$return .= <<<CONTENT\nipsDataItem_unread\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' itemprop=\"itemListElement\">\n\t\t\t<div class='ipsDataItem_icon'>\n\t\t\t\t\nCONTENT;\n\nif ( isset( $notification['data']['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $notification['data']['author'], 'mini' );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $notification['data']['url'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t<span class='ipsDataItem_title'>\nCONTENT;\n$return .= htmlspecialchars( $notification['data']['title'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<br>\n\t\t\t\t\t<span class=\"ipsType_light\">\nCONTENT;\n\n$val = ( $notification['notification']->sent_time instanceof \\IPS\\DateTime ) ? $notification['notification']->sent_time : \\IPS\\DateTime::ts( $notification['notification']->sent_time );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/a>\n\t\t\t<\/div>\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationsRows( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( count( $rows ) ):\n$return .= <<<CONTENT\n \n\t\nCONTENT;\n\nforeach ( $rows as $notification ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $notification['data']['title'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t<li class='ipsDataItem \nCONTENT;\n\nif ( $notification['data']['unread'] ):\n$return .= <<<CONTENT\nipsDataItem_unread\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsClearfix' itemprop=\"itemListElement\">\n\t\t\t\t<div class='ipsDataItem_icon'>\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $notification['data']['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $notification['data']['author'], 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\nCONTENT;\n\nif ( !$notification['data']['unread'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span class=\"ipsItemStatus ipsItemStatus_small ipsItemStatus_read\">\n\t\t\t\t\t\t\t<i class=\"fa fa-circle\"><\/i>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $notification['data']['url'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsDataItem_title'>\nCONTENT;\n$return .= htmlspecialchars( $notification['data']['title'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\nCONTENT;\n\nif ( !$notification['data']['unread'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/strong>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<br>\n\t\t\t\t\t<span class=\"ipsType_light\">\nCONTENT;\n\n$val = ( $notification['notification']->updated_time instanceof \\IPS\\DateTime ) ? $notification['notification']->updated_time : \\IPS\\DateTime::ts( $notification['notification']->updated_time );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationsSettings( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('notification_options') );\n$return .= <<<CONTENT\n\n<form accept-charset='utf-8' action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n data-ipsForm>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\n\t<div class='ipsAreaBackground ipsPad' data-controller='core.front.system.notificationSettings'>\n\t\t<div class='ipsGrid ipsGrid_collapsePhone ipsAreaBackground_reset ipsPad ipsSpacer_bottom'>\n\t\t\t<ul class=\"ipsForm ipsForm_vertical ipsGrid_span8\">\n\t\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( !( $input instanceof \\IPS\\Helpers\\Form\\Matrix ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsFieldRow ipsFieldRow_checkbox' \nCONTENT;\n\nif ( $input->htmlId ):\n$return .= <<<CONTENT\nid=\"\nCONTENT;\n$return .= htmlspecialchars( $input->htmlId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\CheckboxSet or $input instanceof \\IPS\\Helpers\\Form\\Radio ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<strong class='ipsType_normal'>\nCONTENT;\n\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t{$input->html()}\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( !( $input instanceof \\IPS\\Helpers\\Form\\CheckboxSet ) && !( $input instanceof \\IPS\\Helpers\\Form\\Radio ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<div class=\"ipsFieldRow_content\">\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<label for=\"check_\nCONTENT;\n$return .= htmlspecialchars( $input->htmlId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsType_normal\">\nCONTENT;\n\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<span class=\"ipsType_normal\">\nCONTENT;\n\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->language()->checkKeyExists(\"{$input->name}_desc\")  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<span class='ipsFieldRow_desc'>\nCONTENT;\n\n$val = \"{$input->name}_desc\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/li>\t\t\t\t\t\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t\t<div class='ipsGrid_span4 ipsPad ipsHide' data-role='browserNotifyInfo'>\n\t\t\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class='ipsAreaBackground ipsType_center'>\n\t\t\t\nCONTENT;\n\nforeach ( $actionButtons as $button ):\n$return .= <<<CONTENT\n\n\t\t\t\t{$button}\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\t<br>\n\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\Matrix ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<div class='ipsBox'>\n\t\t\t\t\t{$input->nested()}\n\t\t\t\t\t<div class='ipsAreaBackground ipsPad ipsType_center'>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $actionButtons as $button ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t{$button}\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\t<br>\n\t\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationsTable( $table, $headers, $rows, $quickSearch ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsPageHeader ipsClearfix ipsSpacer_bottom'>\n\t<h1 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notifications', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<div class=\"ipsPos_right\">\n\t\t<a class=\"ipsButton ipsButton_light ipsButton_verySmall\" href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&do=options\", null, \"notifications_options\", array(), 0 ) );\n$return .= <<<CONTENT\n\"><i class=\"fa fa-cog\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notification_options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<a class=\"ipsButton ipsButton_light ipsButton_verySmall\" href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&format=rss\", null, \"notifications_rss\", array(), 0 ) );\n$return .= <<<CONTENT\n\"><i class=\"fa fa-rss\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rss', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/div>\n<\/div>\n\n<div class='ipsBox'>\n\t\nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\t<div data-role=\"tablePagination\">\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit, TRUE, $table->getPaginationKey() );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\nCONTENT;\n\nif ( count( $rows ) ):\n$return .= <<<CONTENT\n\n\t\t<ol class='ipsDataList ipsClear cForumTopicTable \nCONTENT;\n\nforeach ( $table->classes as $class ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n' id='elTable_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role=\"tableRows\" itemscope itemtype=\"http:\/\/schema.org\/ItemList\">\n\t\t\t<meta itemprop=\"itemListOrder\" content=\"Descending\">\n\t\t\t\nCONTENT;\n\n$return .= $table->rowsTemplate[0]->{$table->rowsTemplate[1]}( $table, $headers, $rows );\n$return .= <<<CONTENT\n\n\t\t<\/ol>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_center'>\n\t\t\t<p class='ipsType_large'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notifications_none', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\t\t<div data-role=\"tablePagination\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit, TRUE, $table->getPaginationKey() );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction offline( $message ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div id='ipsLayout_mainArea'>\n\t<h1 class='ipsType_pageTitle'>\nCONTENT;\n\n$sprintf = array(\\IPS\\Settings::i()->board_name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'offline_unavailable', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<br>\n\t<div class='ipsRichText ipsType_normal'>\n\t\t{$message}\n\t<\/div>\n\t<br>\n\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->member_id ):\n$return .= <<<CONTENT\n\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login&do=logout\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"logout\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_medium ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_out', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login\", null, \"login\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_medium ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'login', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction privacy(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('privacy') );\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsType_normal ipsType_richText ipsPad'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'privacy_text_value', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->site_address and \\IPS\\Settings::i()->site_address != \"null\" ):\n$return .= <<<CONTENT\n\n\t\t<p>\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->board_name;\n$return .= <<<CONTENT\n, \nCONTENT;\n\n$return .= \\IPS\\GeoLocation::parseForOutput( \\IPS\\Settings::i()->site_address );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reconfirmTerms( $terms, $privacy, $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsType_large ipsSpacer_bottom\">\n\t\nCONTENT;\n\nif ( $terms and $privacy ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reconfirm_terms_and_policy_blurb', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelseif ( $terms ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reconfirm_terms_blurb', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reconfirm_privacy_blurb', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n\n\nCONTENT;\n\nif ( $terms ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsSpacer_bottom\">\n\t\t<h2 class=\"ipsType_sectionHead\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_terms', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<div class='ipsType_normal ipsType_richText ipsPad'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_rules_value', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $privacy ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsSpacer_bottom\">\n\t\t<h2 class=\"ipsType_sectionHead\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'privacy', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<div class='ipsType_normal ipsType_richText ipsPad'>\n\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type == 'external' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<a href='\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->privacy_link;\n$return .= <<<CONTENT\n' rel='external'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_privacy_policy', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'privacy_text_value', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->site_address and \\IPS\\Settings::i()->site_address != \"null\" ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p>\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->board_name;\n$return .= <<<CONTENT\n, \nCONTENT;\n\n$return .= \\IPS\\GeoLocation::parseForOutput( \\IPS\\Settings::i()->site_address );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n{$form}\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction register( $form, $login ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<section class='ipsPad'>\n\t<br>\n\t<h1 class='ipsType_veryLarge ipsType_center ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_up', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<p class='ipsType_large ipsType_center ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'existing_user', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login\", null, \"login\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_short', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/p>\n\t<br>\n\n\t<div data-role='registerForm'>\n\t\t<div class='ipsColumns ipsColumns_collapseTablet'>\n\t\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\t\t<div class='ipsBox ipsPad'>\n\t\t\t\t\t{$form}\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( count ( $login->forms( FALSE, TRUE ) ) > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsColumn ipsColumn_wide' id='elRegisterSocial'>\n\t\t\t\t\t<div class='ipsBox ipsPad'>\n\t\t\t\t\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_start_faster', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t\t<p class='ipsType_normal ipsType_reset ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_connect', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $login->forms( FALSE, TRUE ) as $k => $form ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $k !== '_standard' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<div class='ipsPad_half ipsType_center'>\n\t\t\t\t\t\t\t\t\t{$form}\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction registerWrapper( $content ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div id='elRegisterForm' class='ipsPos_center ipsPad' data-controller='core.front.system.register'>\n\t{$content}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction resetPass( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('lost_password') );\n$return .= <<<CONTENT\n\n<div class='ipsLayout_contentSection'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reset_pass_instructions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<br>\n\t<br>\n\t{$form}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction searchResult( $indexData, $articles, $authorData, $itemData, $unread, $objectUrl, $itemUrl, $containerUrl, $containerTitle, $repCount, $showRepUrl, $snippet, $iPostedIn, $view, $canIgnoreComments=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<li class='ipsStreamItem ipsStreamItem_contentBlock ipsStreamItem_\nCONTENT;\n$return .= htmlspecialchars( $view, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n ipsAreaBackground_reset ipsPad \nCONTENT;\n\nif ( $indexData['index_hidden'] ):\n$return .= <<<CONTENT\nipsModerated\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-role='activityItem' data-timestamp='\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_date_created'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t<div class='ipsStreamItem_container ipsClearfix'>\n\t\t\nCONTENT;\n\nif ( in_array( 'IPS\\Content\\Comment', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$itemClass = $indexData['index_class']::$itemClass;\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsStreamItem_header ipsPhotoPanel ipsPhotoPanel_mini'>\n\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class='ipsStreamItem_contentType' data-ipsTooltip title='\nCONTENT;\n\n$val = \"{$itemClass::$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-\nCONTENT;\n$return .= htmlspecialchars( $itemClass::$icon, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i><\/span>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t<span class='ipsStreamItem_contentType' data-ipsTooltip title='\nCONTENT;\n\n$val = \"{$indexData['index_class']::$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_class']::$icon, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i><\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhotoFromData( $authorData['member_id'], $authorData['name'], $authorData['members_seo_name'], \\IPS\\Member::photoUrl( $authorData ), ( $view !== 'condensed' ) ? 'mini' : 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='\nCONTENT;\n\nif ( $unread ):\n$return .= <<<CONTENT\nipsStreamItem_unread\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $view == 'condensed' && $snippet ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class='ipsPhotoPanel ipsPhotoPanel_small'>\n\t\t\t\t\t\t\t{$snippet}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<h2 class='ipsType_reset ipsStreamItem_title ipsType_break \nCONTENT;\n\nif ( !$indexData['index_title'] or $view == 'condensed' ):\n$return .= <<<CONTENT\nipsStreamItem_titleSmall\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $unread ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->stripQueryString( array( 'comment' => 'comment', 'review' => 'review' ) )->setQueryString( 'do', 'getNewComment' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-linkType=\"star\" \nCONTENT;\n\nif ( $iPostedIn ):\n$return .= <<<CONTENT\ndata-iPostedIn\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'first_unread_post', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip>\n\t\t\t\t\t\t\t\t<span class='ipsItemStatus'><i class=\"fa fa-\nCONTENT;\n\nif ( $iPostedIn ):\n$return .= <<<CONTENT\nstar\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ncircle\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"><\/i><\/span>\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $iPostedIn ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class='ipsItemStatus ipsItemStatus_read ipsItemStatus_posted'><i class=\"fa fa-star\"><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-linkType=\"link\" data-searchable>\nCONTENT;\n$return .= htmlspecialchars( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['title'] ], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_hidden'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_warning ipsBadge_small\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hidden', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\n\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_tags'] ) and $view == 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( explode( ',', $indexData['index_tags'] ), true, true );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/h2>\n\t\t\t\t\t\nCONTENT;\n\nif ( $view != 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_reset ipsStreamItem_status ipsType_light ipsType_blendLinks'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemData['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $itemData['author']['name'], $articles['definite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_other_activity_review', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $articles['indefinite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_own_activity_review', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $itemClass::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $articles['indefinite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_own_activity_item', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemData['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $itemData['author']['name'], $articles['definite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_other_activity_reply', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $articles['indefinite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_own_activity_reply', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemData['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $itemData['author']['name'], $articles['definite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_other_activity_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $articles['indefinite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_own_activity_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<ul class='ipsList_inline ipsStreamItem_stats ipsType_light ipsType_blendLinks'>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findComment', 'comment' => $indexData['index_object_id'] ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $indexData['index_date_created'] instanceof \\IPS\\DateTime ) ? $indexData['index_date_created'] : \\IPS\\DateTime::ts( $indexData['index_date_created'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemClass::$databaseColumnMap['num_comments'] ) and isset( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] ) and $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] > ( $itemClass::$firstCommentRequired ? 1 : 0 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl->setQueryString( 'do', 'getFirstComment' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $itemClass::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ]-1, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemClass::$databaseColumnMap['num_reviews'] ) and isset( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_reviews'] ] ) and $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_reviews'] ] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n#reviews' class='ipsType_blendLinks'><i class='fa fa-star-half-o'><\/i> \nCONTENT;\n$return .= htmlspecialchars( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_reviews'] ], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/ul>\n\n\t\t\t\t\t\t<p class='ipsStreamItem_status ipsType_reset ipsType_blendLinks'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemData['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $itemData['author']['name'], $articles['definite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_other_activity_review', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $articles['indefinite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_own_activity_review', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $itemClass::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $articles['indefinite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_own_activity_item', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemData['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $itemData['author']['name'], $articles['definite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_other_activity_reply', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $articles['indefinite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_own_activity_reply', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemData['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $itemData['author']['name'], $articles['definite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_other_activity_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $articles['indefinite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_own_activity_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\n\t\t\t\t\t\nCONTENT;\n\nif ( $view == 'condensed' && $snippet ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( $view !== 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsStreamItem_snippet ipsType_break'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $canIgnoreComments and isset( $itemData['author'] ) and \\IPS\\Member::loggedIn()->member_id and isset( $authorData['member_id'] ) and isset ( $authorData['member_group_id'] ) and \\IPS\\Member::loggedIn()->isIgnoring( $authorData, 'topics' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsComment_ignored ipsType_light' id='elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ignoreCommentID='elComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ignoreUserID='\nCONTENT;\n$return .= htmlspecialchars( $authorData['member_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ignoring_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='#elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' data-ipsMenu data-ipsMenu-menuID='elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' data-ipsMenu-appendTo='#elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"ignoreOptions\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'see_post_ignore_options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t\t<ul class='ipsMenu ipsHide' id='elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t\t\t\t\t\t<li class='ipsMenu_item ipsJS_show' data-ipsMenuValue='showPost'><a href='#'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'show_this_post', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t<li class='ipsMenu_sep ipsJS_show'><hr><\/li>\n\t\t\t\t\t\t\t<li class='ipsMenu_item' data-ipsMenuValue='stopIgnoring'><a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=ignore&do=remove&id={$authorData['member_id']}\", null, \"ignore\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$sprintf = array($authorData['name']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stop_ignoring_posts_by', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=ignore\", null, \"ignore\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_ignore_preferences', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div id='elComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class=\"ipsHide\">\n\t\t\t\t\t\t{$snippet}\n\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t \t{$snippet}\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t<ul class='ipsList_inline ipsStreamItem_meta'>\n\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findComment', 'comment' => $indexData['index_object_id'] ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $indexData['index_date_created'] instanceof \\IPS\\DateTime ) ? $indexData['index_date_created'] : \\IPS\\DateTime::ts( $indexData['index_date_created'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemClass::$databaseColumnMap['num_comments'] ) and isset( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] ) and $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] > ( $itemClass::$firstCommentRequired ? 1 : 0 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl->setQueryString( 'do', 'getFirstComment' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $itemClass::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] - 1 ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_replies', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_comments', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( in_array( 'IPS\\Content\\Reputation', class_implements( $indexData['index_class'] ) ) and \\IPS\\Settings::i()->reputation_enabled && $repCount ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->reputationMini( $repCount, FALSE, FALSE, $showRepUrl, NULL );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_tags'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( explode( ',', $indexData['index_tags'] ), true, true );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsStreamItem_header ipsPhotoPanel ipsPhotoPanel_mini'>\n\t\t\t\t<span class='ipsStreamItem_contentType' data-ipsTooltip title='\nCONTENT;\n\n$val = \"{$indexData['index_class']::$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'ucfirst' => TRUE ) );\n$return .= <<<CONTENT\n'><i class='fa fa-\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_class']::$icon, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i><\/span>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhotoFromData( $authorData['member_id'], $authorData['name'], $authorData['members_seo_name'], \\IPS\\Member::photoUrl( $authorData ), ( $view !== 'condensed' ) ? 'mini' : 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='\nCONTENT;\n\nif ( $unread ):\n$return .= <<<CONTENT\nipsStreamItem_unread\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $view == 'condensed' && $snippet ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class='ipsPhotoPanel ipsPhotoPanel_small'>\n\t\t\t\t\t\t\t{$snippet}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<h2 class='ipsType_reset ipsStreamItem_title ipsType_break \nCONTENT;\n\nif ( $view == 'condensed' ):\n$return .= <<<CONTENT\nipsStreamItem_titleSmall\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $unread ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( 'do', 'getNewComment' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'first_unread_post', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-linkType=\"star\" \nCONTENT;\n\nif ( $iPostedIn ):\n$return .= <<<CONTENT\ndata-iPostedIn\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsTooltip>\n\t\t\t\t\t\t\t\t<span class='ipsItemStatus'><i class=\"fa fa-\nCONTENT;\n\nif ( $iPostedIn ):\n$return .= <<<CONTENT\nstar\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ncircle\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"><\/i><\/span>\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $iPostedIn ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class='ipsItemStatus ipsItemStatus_read ipsItemStatus_posted'><i class=\"fa fa-star\"><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-linkType=\"link\" data-searchable>\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_title'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_hidden'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_warning ipsBadge_small\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hidden', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\n\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_tags'] ) and $view == 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( explode( ',', $indexData['index_tags'] ), true, true );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/h2>\n\t\t\t\t\t\nCONTENT;\n\nif ( $view != 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_reset ipsStreamItem_status ipsType_light ipsType_blendLinks'>\nCONTENT;\n\n$sprintf = array($authorData['name'], $articles['indefinite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_own_activity_item', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/p>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<ul class='ipsList_inline ipsStreamItem_stats ipsType_light ipsType_blendLinks'>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $indexData['index_date_created'] instanceof \\IPS\\DateTime ) ? $indexData['index_date_created'] : \\IPS\\DateTime::ts( $indexData['index_date_created'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_class']::$databaseColumnMap['num_comments'] ) and isset( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] ) and $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] > ( $indexData['index_class']::$firstCommentRequired ? 1 : 0 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl->setQueryString( 'do', 'getFirstComment' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_class']::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] - 1, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_class']::$databaseColumnMap['num_reviews'] ) and isset( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ] ) and $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n#reviews' class='ipsType_blendLinks'><i class='fa fa-star-half-o'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<p class='ipsStreamItem_status ipsType_reset ipsType_blendLinks'>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name'], $articles['indefinite']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_own_activity_item', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $containerTitle, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\n\t\t\t\t\t\nCONTENT;\n\nif ( $view == 'condensed' && $snippet ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( $view !== 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsStreamItem_snippet ipsType_break'>\n\t\t\t\t\t{$snippet}\n\t\t\t\t<\/div>\n\t\t\t\t<ul class='ipsList_inline ipsStreamItem_meta'>\n\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $indexData['index_date_created'] instanceof \\IPS\\DateTime ) ? $indexData['index_date_created'] : \\IPS\\DateTime::ts( $indexData['index_date_created'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_class']::$databaseColumnMap['num_comments'] ) and isset( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] ) and $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] > ( $indexData['index_class']::$firstCommentRequired ? 1 : 0 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl->setQueryString( 'do', 'getFirstComment' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_class']::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] - 1 ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_replies', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_comments', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_class']::$databaseColumnMap['num_reviews'] ) and isset( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ] ) and $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n#reviews' class='ipsType_blendLinks'><i class='fa fa-star-half-o'><\/i> \nCONTENT;\n\n$pluralize = array( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_reviews', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( in_array( 'IPS\\Content\\Reputation', class_implements( $indexData['index_class'] ) ) and \\IPS\\Settings::i()->reputation_enabled and $repCount ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->reputationMini( $repCount, FALSE, FALSE, $showRepUrl, NULL );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_tags'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( explode( ',', $indexData['index_tags'] ), true, true );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction searchResultSnippet( $indexData ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( trim( $indexData['index_content'] ) !== '' ):\n$return .= <<<CONTENT\n\n\t<div class='ipsType_richText ipsContained ipsType_medium'>\n\t\t<div \nCONTENT;\n\nif ( !( \\IPS\\Dispatcher::i()->application->directory == 'core' and \\IPS\\Dispatcher::i()->module and \\IPS\\Dispatcher::i()->module->key == 'search' ) ):\n$return .= <<<CONTENT\ndata-ipsTruncate data-ipsTruncate-type='remove' data-ipsTruncate-size='3 lines'\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-searchable data-findTerm\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t{$indexData['index_content']}\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settings( $tab, $output, $canChangeEmail, $canChangePassword, $canChangeUsername, $canChangeSignature, $services ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('settings'), \\IPS\\Member::loggedIn()->language()->addToStack('settings_blurb') );\n$return .= <<<CONTENT\n\n\n<div class='ipsAreaBackground_light' id='elSettingsTabs' data-ipsTabBar data-ipsTabBar-contentArea='#elProfileTabContent' data-ipsTabBar-itemSelector='.ipsSideMenu_item' data-ipsTabBar-activeClass='ipsSideMenu_itemActive'>\n\t<div class='ipsColumns ipsColumns_collapsePhone ipsColumns_bothSpacing'>\n\t\t<div class='ipsColumn ipsColumn_wide'>\n\t\t\t<div class='ipsSideMenu' data-ipsSideMenu>\n\t\t\t\t<h3 class=\"ipsSideMenu_mainTitle ipsAreaBackground_light ipsType_medium\">\n\t\t\t\t\t<a href=\"#modcp_menu\" class=\"ipsPad_double\" data-action=\"openSideMenu\">\n\t\t\t\t\t\t<i class=\"fa fa-bars\"><\/i> &nbsp;\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'settings_area', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;<i class=\"fa fa-caret-down\"><\/i>\n\t\t\t\t\t<\/a>\n\t\t\t\t<\/h3>\n\t\t\t\t<ul class=\"ipsSideMenu_list\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings\", null, \"settings\", array(), 0 ) );\n$return .= <<<CONTENT\n' id='setting_overview' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'overview' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'overview', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"true\">\n\t\t\t\t\t\t\t<i class='fa fa-tachometer'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'overview', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nif ( $canChangeEmail ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=email\", null, \"settings_email\", array(), 0 ) );\n$return .= <<<CONTENT\n' id='setting_email' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'email' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"false\">\n\t\t\t\t\t\t\t\t<i class='fa fa-envelope-o'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $canChangePassword ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=password\", null, \"settings_password\", array(), 0 ) );\n$return .= <<<CONTENT\n' id='setting_password' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'password' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"false\">\n\t\t\t\t\t\t\t\t<i class='fa fa-lock'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $canChangeUsername ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=username\", null, \"settings_username\", array(), 0 ) );\n$return .= <<<CONTENT\n' id='setting_username' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'username' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"false\">\n\t\t\t\t\t\t\t\t<i class='fa fa-user'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $canChangeSignature ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=signature\", null, \"settings_signature\", array(), 0 ) );\n$return .= <<<CONTENT\n' id='setting_signature' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'signature' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'signature', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"false\">\n\t\t\t\t\t\t\t\t<i class='fa fa-pencil'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'signature', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $services as $k => $class ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=profilesync&service={$k}\", null, \"settings_{$k}\", array(), 0 ) );\n$return .= <<<CONTENT\n' id='setting_profilesync_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === \"profilesync_{$k}\" ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$val = \"profilesync__{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"false\">\n\t\t\t\t\t\t\t\t<i class='fa fa-\nCONTENT;\n$return .= htmlspecialchars( $class::$icon, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i> \nCONTENT;\n\n$val = \"profilesync__{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class='ipsColumn ipsColumn_fluid ipsAreaBackground_reset'>\n\t\t\t<section id='elProfileTabContent' class='ipsPad'>\n\t\t\t\t<div id=\"ipsTabs_elSettingsTabs_setting_\nCONTENT;\n$return .= htmlspecialchars( $tab, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_panel\" class=\"ipsTabs_panel\" aria-labelledby=\"setting_overview\" aria-hidden=\"false\">\n\t\t\t\t\t{$output}\n\t\t\t\t<\/div>\n\t\t\t<\/section>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsEmail( $form=null ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_address', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\nCONTENT;\n\nif ( $form ):\n$return .= <<<CONTENT\n\n\t<br><br>\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->reg_auth_type == 'user' or \\IPS\\Settings::i()->reg_auth_type == 'admin_user' ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_textBlock ipsType_normal'>\n\t\t\t<ul class='ipsList_bullets'>\n\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_explain_1', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_explain_2', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<br><hr class='ipsHr'><br>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t{$form}\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<hr class='ipsHr'><br>\n\t<div class='ipsType_normal'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_admin_1', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/div>\n\n\t<ol class='ipsList_bullets ipsList_numbers ipsSpacer_top ipsType_normal'>\n\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_admin_2', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t<li>\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_admin_3', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_admin_4', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_admin_5', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t<\/ol>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsOverview( $services ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsColumns ipsColumns_collapsePhone'>\n\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t<ul class='ipsDataList'>\n\t\t\t<li class='ipsDataItem'>\n\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t<h4 class='ipsDataItem_title'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class='ipsDataItem'>\n\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t<h4 class='ipsDataItem_title'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->email, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->members_pass_hash ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsDataItem'>\n\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t<h4 class='ipsDataItem_title'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\t********\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nforeach ( $services as $k => $service ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsDataItem'>\n\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $service->connected() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<h4 class='ipsDataItem_title'><span class='ipsBadge ipsBadge_positive'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'enabled', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span> <strong>\nCONTENT;\n\n$val = \"profilesync__{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $service->name() ):\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\n$sprintf = array($service->name()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_logged_in_as', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<br>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class='ipsType_light'>\nCONTENT;\n$return .= htmlspecialchars( $service->settingsDesc(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<h4 class='ipsDataItem_title'><span class='ipsBadge ipsBadge_negative'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'disabled', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span> <strong>\nCONTENT;\n\n$val = \"profilesync__{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\t\t<span class='ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_not_syncing', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n\t<div class='ipsColumn ipsColumn_wide ipsAreaBackground_light'>\n\t\t<div class='ipsPad'>\n\t\t\t\nCONTENT;\n\n$thisMemberID = \\IPS\\Member::loggedIn()->member_id;\n$return .= <<<CONTENT\n\n\t\t\t<h3 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'other_settings', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t<br><br>\n\t\t\t<ul class='ipsList ipsList_reset ipsType_medium'>\n\t\t\t\t<li><a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&do=options\", null, \"notifications_options\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notification_options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->url()->setQueryString( 'do', 'edit' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-modal='true' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li><a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=ignore\", null, \"ignore\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'menu_manage_ignore', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsPassword( $form=null ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<hr class='ipsHr'><br>\n\nCONTENT;\n\nif ( $form ):\n$return .= <<<CONTENT\n\n\t{$form}\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class='ipsType_normal'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password_admin_1', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/div>\n\n\t<ol class='ipsList_bullets ipsList_numbers ipsSpacer_top ipsType_normal'>\n\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password_admin_2', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t<li>\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password_admin_3', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password_admin_4', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password_admin_5', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t<\/ol>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsProfileSync( $photo, $headline, $status, $form, $service, $langKey, $syncingOn ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='\nCONTENT;\n\nif ( $photo ):\n$return .= <<<CONTENT\nipsPhotoPanel ipsPhotoPanel_mini \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\nipsClearfix'>\n\t\nCONTENT;\n\nif ( $photo ):\n$return .= <<<CONTENT\n<img src='\nCONTENT;\n$return .= htmlspecialchars( $photo, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' alt='' class='ipsUserPhoto ipsUserPhoto_mini'>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div>\n\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n$return .= htmlspecialchars( $headline, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\nCONTENT;\n\nif ( $status and \\IPS\\Settings::i()->profile_comments ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_light ipsType_normal' data-ipsTruncate data-ipsTruncate-type='remove' data-ipsTruncate-size='3 lines'>\n\t\t\t\t{$status->content}\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\n<br><hr class='ipsHr'>\n\n<div class='ipsGrid ipsGrid_collapsePhone'>\n\t<div class='ipsGrid_span6'>\n\t\t<h3 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t<br><br>\n\t\t{$form}\n\t<\/div>\n\t<div class='ipsGrid_span6'>\n\t\n\t\t<div class='ipsAreaBackground ipsPad ipsType_normal'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_sync_blurb', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<br>\n\t\t\t<span class='ipsType_light'>\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->profilesync_lastsync ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array(\\IPS\\DateTime::ts( \\IPS\\Member::loggedIn()->profilesync_lastsync )->localeDate()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_last_sync', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_not_synced', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<br><br>\n\n\t\t\t\nCONTENT;\n\nif ( $syncingOn ):\n$return .= <<<CONTENT\n<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=profilesync&service={$service}&sync=1\", null, \"settings_{$service}\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_normal ipsButton_small'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_sync', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a> &nbsp;&nbsp;\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;&nbsp; \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=profilesync&service={$service}&disassociate=1\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"settings_{$service}\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsType_normal ipsType_warning'>\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $langKey )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_off', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsProfileSyncLogin( $form, $langKey ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<p class=\"ipsMessage ipsMessage_info\">\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $langKey ), \\IPS\\Member::loggedIn()->language()->addToStack( $langKey )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_blurb', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n<div class='ipsPad ipsAreaBackground ipsPos_center'>{$form}<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsSignature( $form, $sigLimits ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $sigLimits[1] or $sigLimits[2] or $sigLimits[3] or $sigLimits[4] or $sigLimits[5] ):\n$return .= <<<CONTENT\n\n\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'signature_restrictions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<p class='ipsType_medium ipsType_reset'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ensure_signature_restrictions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n:\n\t<\/p>\n\n\t<div class='ipsType_textBlock ipsType_normal'>\n\t\t<br>\n\t\t<ul class='ipsList_inline'>\n\t\t\t\nCONTENT;\n\nif ( $sigLimits[1] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><i class='fa fa-check'><\/i> \nCONTENT;\n\n$pluralize = array( $sigLimits[1] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sig_max_imagesr', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $sigLimits[2] or $sigLimits[3] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><i class='fa fa-check'><\/i> \nCONTENT;\n\n$sprintf = array($sigLimits[2], $sigLimits[3]); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sig_max_imgsize', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $sigLimits[4] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><i class='fa fa-check'><\/i> \nCONTENT;\n\n$pluralize = array( $sigLimits[4] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sig_max_urls', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $sigLimits[5] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><i class='fa fa-check'><\/i> \nCONTENT;\n\n$pluralize = array( $sigLimits[5] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sig_max_lines', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n\t<hr class='ipsHr'><br>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n{$form}\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsUsername( $form, $made, $allowed, $since, $days ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_username', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->group['g_dname_changes'] != -1 ):\n$return .= <<<CONTENT\n\n\t<div class='ipsType_textBlock ipsType_normal'>\n\t\t<ul class='ipsList_bullets'>\n\t\t\t<li>\nCONTENT;\n\n$sprintf = array($made, $allowed, $since->localeDate(), $days); $pluralize = array( $allowed ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_username_explain', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf, 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t<\/ul>\n\t<\/div>\n\t<br>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<hr class='ipsHr'><br>\n{$form}\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsUsernameLimitReached( $message ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_username', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<hr class='ipsHr'><br>\n{$message}\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction terms(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('reg_terms') );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsType_normal ipsType_richText ipsPad'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_rules_value', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction unsubscribed(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('unsubscribed') );\n$return .= <<<CONTENT\n\n<div class='ipsLayout_contentSection'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unsubscribed_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction warningRow( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t<li class=\"ipsDataItem \nCONTENT;\n\nif ( method_exists( $row, 'tableClass' ) && $row->tableClass() ):\n$return .= <<<CONTENT\nipsDataItem_\nCONTENT;\n$return .= htmlspecialchars( $row->tableClass(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \">\n\t\t<div class='ipsDataItem_icon ipsPos_top'>\n\t\t\t<a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=warnings&do=view&id={$row->member}&w={$row->id}\", null, \"warn_view\", array( \\IPS\\Member::load( $row->member )->members_seo_name ), 0 ) );\n$return .= <<<CONTENT\n\" data-ipsDialog data-ipsDialog-size='narrow' class=\"ipsType_blendLinks\" data-ipsTooltip title='\nCONTENT;\n\n$pluralize = array( $row->points ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'wan_action_points', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n'>\n\t\t\t\t<span class=\"ipsPoints\">\nCONTENT;\n$return .= htmlspecialchars( $row->points, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/a>\n\t\t<\/div>\n\t\t<div class='ipsDataItem_main'>\n\t\t\t<h4 class='ipsDataItem_title'>\t\t\t\t\n\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $row->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_announcement', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $row->tableHoverUrl ):\n$return .= <<<CONTENT\ndata-ipsHover\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('title') ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $row->mapped('title'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n<em class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_deleted', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/em>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/a>\n\t\t\t<\/h4>\n            \nCONTENT;\n\nif ( $row->note_member ):\n$return .= <<<CONTENT\n\n                <div class='ipsDataItem_meta ipsType_richText ipsType_medium' data-ipsTruncate data-ipsTruncate-size='1 lines' data-ipsTruncate-type='remove'>\n                    \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warn_member_note', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: {$row->note_member}\n                <\/div>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n            \nCONTENT;\n\nif ( $row->note_mods and \\IPS\\Member::loggedIn()->modPermission('mod_see_warn') ):\n$return .= <<<CONTENT\n\n                <div class='ipsDataItem_meta ipsType_richText ipsType_medium' data-ipsTruncate data-ipsTruncate-size='1 lines' data-ipsTruncate-type='remove'>\n                    \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warn_mod_note', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: {$row->note_mods}\n                <\/div>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n            <ul class='ipsList_inline ipsSpacer_top ipsSpacer_half'>\n            \nCONTENT;\n\nif ( \\IPS\\Settings::i()->warnings_acknowledge ):\n$return .= <<<CONTENT\n\n            \t<li>\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->acknowledged ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<strong class='ipsType_success'><i class='fa fa-check-circle'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warning_acknowledged', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<strong class='ipsType_light'><i class='fa fa-circle-o'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warning_not_acknowledged', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<li class='ipsType_light'>\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $row->moderator )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warned_by', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = ( $row->__get( $row::$databaseColumnMap['date'] ) instanceof \\IPS\\DateTime ) ? $row->__get( $row::$databaseColumnMap['date'] ) : \\IPS\\DateTime::ts( $row->__get( $row::$databaseColumnMap['date'] ) );$return .= $val->html();\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $row->expire_date > 0 ):\n$return .= <<<CONTENT\n<em><strong>(\nCONTENT;\n\n$sprintf = array(\\IPS\\DateTime::ts( $row->expire_date )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warning_expires', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n)<\/em><\/strong>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/li>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( $row->canDelete() ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsDataItem_generic ipsDataItem_size3'>\n\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $row->url('delete')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'revoke_this_warning', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-action=\"revoke\" class='ipsPos_right ipsButton ipsButton_verySmall ipsButton_light' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'revoke_this_warning', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-size='medium'><i class=\"fa fa-undo\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'revoke_this_warning', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $table->canModerate() ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsDataItem_modCheck ipsType_noBreak ipsPos_center'>\n\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t<input type='checkbox' data-role='moderation' name=\"moderate[\nCONTENT;\n$return .= htmlspecialchars( $row->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" data-actions=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ' ', $table->multimodActions( $row ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-state='\nCONTENT;\n\nif ( !$row->active ):\n$return .= <<<CONTENT\nhidden\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t<span><\/span>\n\t\t\t\t<\/span>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
