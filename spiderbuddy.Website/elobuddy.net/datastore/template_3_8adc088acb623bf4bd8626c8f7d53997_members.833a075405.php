<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_core_global_members extends \\IPS\\Theme\\Template\n{\n\t\t\tfunction attachmentLocations( $locations, $truncateLinks=TRUE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( count( $locations ) ):\n$return .= <<<CONTENT\n\n\t<ul class=\"ipsList_reset\">\n\t\t\nCONTENT;\n\nforeach ( $locations as $location ):\n$return .= <<<CONTENT\n\n\t\t\t<li>\n\t\t\t\t\nCONTENT;\n\nif ( $location instanceof \\IPS\\Content or $location instanceof \\IPS\\Node\\Model ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href=\"\nCONTENT;\n\nif ( \\IPS\\Dispatcher::i()->controllerLocation == 'admin' ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( method_exists( $location, 'acpUrl' ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $location->acpUrl(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $location->url()->makeSafeForAcp(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $location->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" target=\"_blank\" class=\"ipsType_blendLinks\">\n\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $location::$icon ) ):\n$return .= <<<CONTENT\n<i class=\"fa fa-\nCONTENT;\n$return .= htmlspecialchars( $location::$icon, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( isset( $location::$title ) ):\n$return .= <<<CONTENT\ntitle=\"\nCONTENT;\n\n$val = \"{$location::$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n><\/i> \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $location instanceof \\IPS\\Content\\Item ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $location->mapped('title'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $location instanceof \\IPS\\Node\\Model ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $location->_title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $location->item()->mapped('title'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/a>\n\t\t\t\t\nCONTENT;\n\nelseif ( $location instanceof \\IPS\\Http\\Url ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href=\"\nCONTENT;\n\nif ( \\IPS\\Dispatcher::i()->controllerLocation == 'admin' ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $location->makeSafeForAcp(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $location, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" class=\"ipsType_blendLinks\" target=\"_blank\"\nCONTENT;\n\nif ( $truncateLinks ):\n$return .= <<<CONTENT\n title=\"\nCONTENT;\n$return .= htmlspecialchars( $location, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $truncateLinks ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( mb_substr( html_entity_decode( $location ), '0', \"60\" ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ) . ( ( mb_strlen( html_entity_decode( $location ) ) > \"60\" ) ? '&hellip;' : '' );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $location, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/a>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<p class=\"\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'attach_locations_empty', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction bdayForm_day( $name, $value, $error='' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<select name=\"bday[day]\">\n\t<option value='0' \nCONTENT;\n\nif ( $value['day'] == 0  ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n><\/option>\n\t\nCONTENT;\n\nforeach ( range( 1, 31 ) as $day ):\n$return .= <<<CONTENT\n\n\t\t<option value='\nCONTENT;\n$return .= htmlspecialchars( $day, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $value['day'] == $day  ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlspecialchars( $day, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/select>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction bdayForm_month( $name, $value, $error='' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<select name=\"bday[month]\">\n\t<option value='0' \nCONTENT;\n\nif ( $value['month'] == 0  ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n><\/option>\n\t\nCONTENT;\n\nforeach ( range( 1, 12 ) as $month ):\n$return .= <<<CONTENT\n\n\t\t<option value='\nCONTENT;\n$return .= htmlspecialchars( $month, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $value['month'] == $month  ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\DateTime::create()->setDate( 2000, $month, 15 )->strFormat('%B'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/select>\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction bdayForm_year( $name, $value, $error='' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<select name=\"bday[year]\">\n\t<option value='0'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'not_telling', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nforeach ( array_reverse( range( date('Y') - 150, date('Y') ) ) as $year ):\n$return .= <<<CONTENT\n\n\t\t<option value='\nCONTENT;\n$return .= htmlspecialchars( $year, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $value['year'] == $year  ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlspecialchars( $year, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/select>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ipLookup( $url, $geolocation, $map, $counts ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<h2 class='ipsType_sectionTitle ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ip_address_info', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<div class='ipsPad ipsAreaBackground_light cIPInfo'>\n\t\nCONTENT;\n\nif ( $geolocation ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsColumns ipsColumns_noSpacing ipsColumns_collapsePhone'>\n\t\t\t<div class='ipsColumn ipsColumn_wide ipsAreaBackground_light'>\n\t\t\t\t<div class='ipsPad cIPInfo_map'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $geolocation ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $map ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t{$map}\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p>{$geolocation}<\/p>\n\t\t\t\t\t\t<p class=\"ipsType_light ipsType_small\"><i class=\"fa fa-info-circle\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ip_geolocation_info', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class=\"ipsGrid ipsGrid_collapsePhone ipsAreaBackground_reset\">\n\t\t\nCONTENT;\n\nforeach ( $counts as $key => $value ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsGrid_span4 ipsPad ipsType_center'>\n\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $url->setQueryString( 'area', $key ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsType_blendLinks\">\n\t\t\t\t\t\t<span class='ipsType_veryLarge cIPInfo_value'>\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span><br>\n\t\t\t\t\t\t<p class='ipsType_reset ipsTruncate ipsTruncate_line ipsType_minorHeading'>\nCONTENT;\n\n$val = \"ipAddresses__{$key}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t<\/a>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsGrid_span4 ipsPad ipsType_center ipsType_light ipsFaded'>\n\t\t\t\t\t<span class='ipsType_veryLarge cIPInfo_value'>\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span><br>\n\t\t\t\t\t<p class='ipsType_reset ipsTruncate ipsTruncate_line ipsType_minorHeading'>\nCONTENT;\n\n$val = \"ipAddresses__{$key}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\nCONTENT;\n\nif ( $geolocation ):\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationLabel( $key, $data ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $data['icon'] ):\n$return .= <<<CONTENT\n\n\t<i class=\"fa fa-\nCONTENT;\n$return .= htmlspecialchars( $data['icon'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><\/i>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$val = \"{$key}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
