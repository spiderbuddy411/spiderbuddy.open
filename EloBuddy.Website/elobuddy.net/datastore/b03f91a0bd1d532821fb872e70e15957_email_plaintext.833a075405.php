<?php

return <<<'VALUE'
"namespace IPS\\Theme;\n\tfunction email_plaintext_core_emailWrapper( $subject, $member, $content, $unsubscribe, $placeholderRecipient=FALSE, $introText='', $email ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $member->member_id  ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $email->language->addToStack(\"email_greeting_member\", FALSE, array( 'sprintf' => array( $member->name ) ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelseif ( $placeholderRecipient ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $email->language->addToStack(\"email_greeting_member\", FALSE, array( 'sprintf' => array( '*|recipient_name|*' ) ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n{$content}\n\n-----\n\nCONTENT;\n\nif ( $unsubscribe['link'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( isset( $unsubscribe['blurb'] ) and $unsubscribe['blurb'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $unsubscribe['blurb'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $email->language->addToStack(\"unsubscribe_blurb\", FALSE), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $unsubscribe['text'] != '' ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $email->language->addToStack($unsubscribe['text'], FALSE), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $unsubscribe['link'] != '' ):\n$return .= <<<CONTENT\n( \nCONTENT;\n$return .= htmlspecialchars( $unsubscribe['link'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n )\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( isset( $unsubscribe['orlink'] ) and $unsubscribe['orlink'] ):\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $email->language->addToStack(\"or\", FALSE), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n  \nCONTENT;\n$return .= htmlspecialchars( $email->language->addToStack($unsubscribe['ortext'], FALSE), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n ( \nCONTENT;\n$return .= htmlspecialchars( $unsubscribe['orlink'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n )\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type != \"none\" ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type == \"internal\" ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=privacy\", \"front\", \"privacy\", array(), 0 );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->privacy_link;\n$return .= <<<CONTENT\n)\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->board_name;\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( \\IPS\\Settings::i()->site_address and \\IPS\\Settings::i()->site_address != 'null' ):\n$return .= <<<CONTENT\n, \nCONTENT;\n\n$return .= \\IPS\\GeoLocation::parseForOutput( \\IPS\\Settings::i()->site_address );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}"
VALUE;
